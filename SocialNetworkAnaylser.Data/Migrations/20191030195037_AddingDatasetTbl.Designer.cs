// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetworkAnaylser.Data.Context;

namespace SocialNetworkAnaylser.Data.Migrations
{
    [DbContext(typeof(SocialNetworkAnalyserContext))]
    [Migration("20191030195037_AddingDatasetTbl")]
    partial class AddingDatasetTbl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SocialNetworkAnaylser.Core.Dataset.Dataset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsImported");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Datasets");
                });

            modelBuilder.Entity("SocialNetworkAnaylser.Core.Friendship.Friendship", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long>("DatasetId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("PersonId1");

                    b.Property<long>("PersonId2");

                    b.HasKey("Id");

                    b.HasIndex("DatasetId");

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("SocialNetworkAnaylser.Core.Friendship.Friendship", b =>
                {
                    b.HasOne("SocialNetworkAnaylser.Core.Dataset.Dataset", "Dataset")
                        .WithMany("Friendships")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
